[{"D:\\React_from_0_to_hero\\my_panda\\src\\index.js":"1","D:\\React_from_0_to_hero\\my_panda\\src\\App.js":"2","D:\\React_from_0_to_hero\\my_panda\\src\\loyout\\Header.js":"3","D:\\React_from_0_to_hero\\my_panda\\src\\loyout\\Footer.js":"4","D:\\React_from_0_to_hero\\my_panda\\src\\loyout\\Main.js":"5","D:\\React_from_0_to_hero\\my_panda\\src\\component\\Movies.js":"6","D:\\React_from_0_to_hero\\my_panda\\src\\component\\Movie.js":"7","D:\\React_from_0_to_hero\\my_panda\\src\\component\\Loader.js":"8","D:\\React_from_0_to_hero\\my_panda\\src\\component\\Search.js":"9"},{"size":232,"mtime":1654796369910,"results":"10","hashOfConfig":"11"},{"size":251,"mtime":1655103639833,"results":"12","hashOfConfig":"11"},{"size":481,"mtime":1655147716676,"results":"13","hashOfConfig":"11"},{"size":409,"mtime":1655123455216,"results":"14","hashOfConfig":"11"},{"size":1084,"mtime":1655281660468,"results":"15","hashOfConfig":"11"},{"size":1352,"mtime":1655143805468,"results":"16","hashOfConfig":"11"},{"size":574,"mtime":1655120737724,"results":"17","hashOfConfig":"11"},{"size":161,"mtime":1655123427455,"results":"18","hashOfConfig":"11"},{"size":2682,"mtime":1655125087941,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1upgrec",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"D:\\React_from_0_to_hero\\my_panda\\src\\index.js",[],[],"D:\\React_from_0_to_hero\\my_panda\\src\\App.js",[],[],"D:\\React_from_0_to_hero\\my_panda\\src\\loyout\\Header.js",["51","52"],[],"export default function Header() {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper header__nav\">\r\n                <a href=\"#\" className=\"brand-logo\">\r\n                    React practice\r\n                </a>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li>\r\n                        <a href=\"#\">By Movie</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","D:\\React_from_0_to_hero\\my_panda\\src\\loyout\\Footer.js",[],[],"D:\\React_from_0_to_hero\\my_panda\\src\\loyout\\Main.js",["53"],[],"D:\\React_from_0_to_hero\\my_panda\\src\\component\\Movies.js",["54"],[],"import Movie from \"./Movie\";\r\n\r\nexport default function Movies(props) {\r\n    const { movies = [] } = props;\r\n    return (\r\n        <div className=\"movies\">\r\n            {/* {movies.map(movie=>(\r\n                <Movie key={movie.imdbID} {...movie}/>\r\n            ))} */}\r\n            {\r\n                movies.length ? movies.map(movie => (\r\n                    <Movie key={movie.imdbID} {...movie} />\r\n                )) : (\r\n                    <div className=\"error404\">\r\n                        <h1>404 Error Page #2</h1>\r\n                        <p class=\"zoom-area\"><b>CSS</b> animations to make a cool 404 page. </p>\r\n                        <section class=\"error-container\">\r\n                            <span class=\"four\"><span class=\"screen-reader-text\">4</span></span>\r\n                            <span class=\"zero\"><span class=\"screen-reader-text\">0</span></span>\r\n                            <span class=\"four\"><span class=\"screen-reader-text\">4</span></span>\r\n                        </section>\r\n                        <div class=\"link-container\">\r\n                            <a target=\"_blank\" href=\"https://www.silocreativo.com/en/creative-examples-404-error-css/\" class=\"more-link\">Visit the original article</a>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\React_from_0_to_hero\\my_panda\\src\\component\\Movie.js",["55"],[],"export default function Movie(props) {\r\n    const { Title, Year, imdbID, Type, Poster } = props;\r\n    return (\r\n        <div className=\"card movie\" key={imdbID}>\r\n            <div className=\"card-image waves-effect waves-block waves-light\">\r\n                <img className=\"activator\" src={Poster} />\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title activator grey-text text-darken-4\">{Title}</span>\r\n                <p>{Year} <span className=\"right\">{Type}</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\React_from_0_to_hero\\my_panda\\src\\component\\Loader.js",[],[],"D:\\React_from_0_to_hero\\my_panda\\src\\component\\Search.js",["56"],[],"import React, { Component } from \"react\";\r\nexport default class Search extends React.Component {\r\n    state = {\r\n        search: '',\r\n        type: 'all'\r\n    }\r\n    handleDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.props.searchMovies(this.state.search,this.state.type)\r\n        }\r\n    }\r\n    handleFilter = (e) => {\r\n        this.setState(()=>({ type: e.target.dataset.type }),()=>{\r\n            this.props.searchMovies(this.state.search,this.state.type)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"email_inline\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            className=\"validate\"\r\n                            value={this.state.search}\r\n                            onChange={(e) => this.setState({ search: e.target.value })}\r\n                            onKeyDown={this.handleDown}\r\n                        />\r\n                        <button className=\"btn search-btn\" onClick={() => this.props.searchMovies(this.state.search,this.state.type)}>Search Movies</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        <input className=\"with-gap\"\r\n                            name=\"type\"\r\n                            type=\"radio\"\r\n                            data-type=\"all\"\r\n                            onChange={this.handleFilter}\r\n                            checked={this.state.type === 'all'} />\r\n                        <span>All</span>\r\n                    </label>\r\n                    <label>\r\n                        <input className=\"with-gap\"\r\n                            name=\"type\" type=\"radio\"\r\n                            data-type=\"movie\"\r\n                            onChange={this.handleFilter}\r\n                            checked={this.state.type === 'movie'}\r\n                        />\r\n                        <span>Movies only</span>\r\n                    </label>\r\n                    <label>\r\n                        <input className=\"with-gap\"\r\n                            name=\"type\"\r\n                            type=\"radio\"\r\n                            data-type=\"series\"\r\n                            onChange={this.handleFilter}\r\n                            checked={this.state.type === 'series'}\r\n                        />\r\n                        <span>Serials only</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"57","severity":1,"message":"58","line":5,"column":17,"nodeType":"59","endLine":5,"endColumn":52},{"ruleId":"57","severity":1,"message":"58","line":10,"column":25,"nodeType":"59","endLine":10,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":1,"column":15,"nodeType":"62","messageId":"63","endLine":1,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":23,"column":29,"nodeType":"59","messageId":"66","endLine":23,"endColumn":138,"fix":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":17,"nodeType":"59","endLine":6,"endColumn":59},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"70","text":"71"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",[1201,1201]," rel=\"noreferrer\""]